/*
 * Map.cpp
 *
 *  Created on: Jun 23, 2015
 *      Author: Ori Damari & Or Shainberg
 */

#include "Map.h"
#include "Utils.h"
#include "lodepng.h"

Map::Map(char* mapPath) {
	// TODO Auto-generated constructor stub
	_mapPath = mapPath;
}

Map::~Map() {
	// TODO Auto-generated destructor stub
}

void Map::loadPng(){

	std::vector<unsigned char> image; //the raw pixels
	unsigned width, height;

	//decode
	unsigned error = lodepng::decode(image, width, height, _mapPath);

	//if there's an error, display it
	if (error)
		std::cout << "decoder error " << error << ": "
				<< lodepng_error_text(error) << std::endl;
	else {
	//the pixels are now in the vector "image", 4 bytes per pixel, ordered RGBARGBA..., use it as texture, draw it, ...

	Utils::CELL_STATUS status;

	_originalMap = new Matrix(width, height);

	for (int y = 0; y < height; y++)
			for (int x = 0; x < width; x++) {
				if (image[y * width * 4 + x * 4 + 0]
						|| image[y * width * 4 + x * 4 + 1]
						|| image[y * width * 4 + x * 4 + 2])
					_originalMap->set(x,y, Utils::FREE);
				else
					_originalMap->set(x,y, Utils::OCCUPIED);
			}
	}
}

